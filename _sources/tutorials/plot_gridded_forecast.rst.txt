.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorials_plot_gridded_forecast.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_tutorials_plot_gridded_forecast.py:


Plotting gridded forecast
=========================

This example show you how to load a gridded forecast stored in the default ASCII format.

Load required libraries
-----------------------

Most of the core functionality can be imported from the top-level :mod:`csep` package. Utilities are available from the
:mod:`csep.utils` subpackage.


.. code-block:: default


    import csep
    from csep.utils import datasets, time_utils








Define forecast properties
--------------------------

We choose a :ref:`time-independent-forecast` to show how to evaluate a grid-based earthquake forecast using PyCSEP. Note,
the start and end date should be chosen based on the creation of the forecast. This is important for time-independent forecasts
because they can be rescale to any arbitrary time period.


.. code-block:: default


    start_date = time_utils.strptime_to_utc_datetime('2006-11-12 00:00:00.0')
    end_date = time_utils.strptime_to_utc_datetime('2011-11-12 00:00:00.0')








Load forecast
-------------

For this example, we provide the example forecast data set along with the main repository. The filepath is relative
to the root directory of the package. You can specify any file location for your forecasts.


.. code-block:: default


    forecast = csep.load_gridded_forecast(datasets.helmstetter_mainshock_fname,
                                          start_date=start_date,
                                          end_date=end_date,
                                          name='helmstetter_mainshock')








Plot forecast
-------------

The forecast object provides :meth:`csep.core.forecasts.GriddedForecast.plot` to plot a gridded forecast. This function
returns a matplotlib axes, so more specific attributes can be set on the figure.


.. code-block:: default


    ax = forecast.plot()




.. image:: /tutorials/images/sphx_glr_plot_gridded_forecast_001.png
    :alt: helmstetter_mainshock
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.7.9/x64/lib/python3.7/site-packages/cartopy/mpl/gridliner.py:343: UserWarning: The .ylabels_right attribute is deprecated. Please use .right_labels to toggle visibility instead.
      warnings.warn('The .ylabels_right attribute is deprecated. Please '





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.712 seconds)


.. _sphx_glr_download_tutorials_plot_gridded_forecast.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_gridded_forecast.py <plot_gridded_forecast.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_gridded_forecast.ipynb <plot_gridded_forecast.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
